// Given two string sequences given by the user, program calculates minimum number of edits (operations) required to convert 
// first string to second.

import java.util.Scanner;

public class EditDistance {

	public static void main(String[] args) {
		Scanner scanner = new Scanner(System.in);
		System.out.println("Enter the first sequence of letters: ");
		String first = scanner.next();
		int a = first.length();
		System.out.println("Enter the second sequence of letters: ");
		String second = scanner.next();
		int b = second.length();
		
		System.out.println("The minimum amount of changes needed to make both sequences identical is: " + Edit(first , second , a, b));
	}
	
	public static int min(int x, int y, int z) {
		  if (x <= y && x <= z) return x;
	      if (y <= x && y <= z) return y;
	      else return z;
	}
	
	public static int Edit (String first, String second, int a, int b) {
		if (a == 0) return b;
		if (b == 0) return a;
		if (first.charAt(a-1) == second.charAt(b-1))
	        return Edit(first, second, a-1, b-1);
		return 1 + min (Edit(first, second, a, b-1), Edit(first, second, a-1, b), Edit(first, second, a-1, b-1)                    
              );
	}
}
